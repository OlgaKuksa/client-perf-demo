{"version":3,"sources":["components/Filter.js","actions/FilterActions.js","components/BugTable.js","components/Slow.js","components/Fast.js","components/Broken.js","components/SchemeInput.js","components/SchemeChanger.js","actions/SchemeChangerActions.js","components/ComponentMenuItem.js","components/PageView.js","App.js","serviceWorker.js","reducer.js","store.js","index.js"],"names":["Filter","props","updateFilterInAppState","debounce","updateFilter","state","value","onValueChange","e","setState","target","filterValue","className","type","this","onChange","placeholder","React","Component","mapDispatchToProps","payload","connect","BugTable","count","results","length","map","it","index","key","id","number","refCount","title","user","login","issuesCount","body","Date","created_at","toLocaleDateString","year","month","day","Slow","filteredResults","filterValues","split","trim","toLowerCase","filter","Boolean","CountByUsers","Map","result","set","get","calculatedResults","includes","every","toString","Fast","getCalculatedResults","createSelector","getFilterValues","getFilteredResults","mapStateToProps","createStructuredSelector","Broken","SchemeInput","name","checked","htmlFor","displayName","SchemeChanger","onChangeColorScheme","activeScheme","updateColorScheme","activeColorScheme","ComponentMenuItem","onClick","icon","PageView","makeComponentActive","selectedComponentId","renderSelectedComponent","getClassName","initialSelectedComponentId","faShoePrints","faPlaneDeparture","faCarCrash","App","window","location","hostname","match","initialState","reducer","action","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d670502.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateFilter } from \"../actions/FilterActions\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\nclass Filter extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { value: props.filterValue || \"\" };\r\n  }\r\n\r\n  updateFilterInAppState = debounce(() => {\r\n    this.props.updateFilter(this.state.value);\r\n  }, 250);\r\n\r\n  onValueChange = e => {\r\n    this.setState({ value: e.target.value }, this.updateFilterInAppState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"filter-input\"\r\n        type=\"text\"\r\n        value={this.state.value}\r\n        onChange={this.onValueChange}\r\n        placeholder=\"Enter text to filter by\"\r\n      ></input>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  filterValue: state.filterValue\r\n});\r\nconst mapDispatchToProps = { updateFilter };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","export const UPDATE_FILTER = \"UPDATE_FILTER\";\r\n\r\nexport const updateFilter = payload => ({\r\n  type: UPDATE_FILTER,\r\n  payload\r\n});\r\n","import React from \"react\";\r\n\r\nclass BugTable extends React.Component {\r\n  render() {\r\n    const count = this.props.results.length;\r\n    return count ? (\r\n      <div>\r\n        <div className=\"count-message\">{count} bug(s) found</div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Line</th>\r\n              <th>Bug Number</th>\r\n              <th>Refs</th>\r\n              <th>Title</th>\r\n              <th>User</th>\r\n              <th>State</th>\r\n              <th>Body</th>\r\n              <th>Created at</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.results.map((it, index) => (\r\n              <tr key={it.id}>\r\n                <td>{index + 1}</td>\r\n                <td>{it.number}</td>\r\n                <td>{it.refCount}</td>\r\n                <td>{it.title}</td>\r\n                <td>\r\n                  {it.user.login} ({it.user.issuesCount})\r\n                </td>\r\n                <td>{it.state}</td>\r\n                <td>{it.body}</td>\r\n                <td>\r\n                  {new Date(it.created_at).toLocaleDateString(\"en-us\", {\r\n                    year: \"numeric\",\r\n                    month: \"numeric\",\r\n                    day: \"numeric\"\r\n                  })}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    ) : (\r\n      <div className=\"big-message\">No bugs found</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BugTable;\r\n","import React from \"react\";\r\nimport BugTable from \"./BugTable\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Slow extends React.Component {\r\n  render() {\r\n    return <BugTable results={this.props.filteredResults} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const filterValues = state.filterValue\r\n    .split(\" \")\r\n    .map(it => it.trim().toLowerCase())\r\n    .filter(Boolean);\r\n\r\n  const CountByUsers = new Map();\r\n  \r\n  for (let result of state.results) {\r\n    CountByUsers.set(\r\n      result.user.id,\r\n      (CountByUsers.get(result.user.id) || 0) + 1\r\n    );\r\n  }\r\n\r\n  const calculatedResults = state.results.map(it => {\r\n    let count = 0;\r\n    for (let result of state.results) {\r\n      if (result.id === it.id) continue;\r\n      if (\r\n        result.body.includes(\"#\" + it.number) ||\r\n        result.title.includes(\"#\" + it.number)\r\n      )\r\n        count++;\r\n    }\r\n    return {\r\n      ...it,\r\n      refCount: count,\r\n      user: { ...it.user, issuesCount: CountByUsers.get(it.user.id) }\r\n    };\r\n  });\r\n\r\n  const filteredResults = filterValues.length\r\n    ? calculatedResults.filter(it =>\r\n        filterValues.every(\r\n          filterValue =>\r\n            it.title.toLowerCase().includes(filterValue) ||\r\n            it.body.toLowerCase().includes(filterValue) ||\r\n            it.number.toString().includes(filterValue) ||\r\n            it.refCount.toString().includes(filterValue) ||\r\n            (it.user.login + \" (\" + it.user.issuesCount + \")\")\r\n              .toLowerCase()\r\n              .includes(filterValue) ||\r\n            it.state.toLowerCase().includes(filterValue) ||\r\n            new Date(it.created_at)\r\n              .toLocaleDateString(\"en-us\", {\r\n                year: \"numeric\",\r\n                month: \"numeric\",\r\n                day: \"numeric\"\r\n              })\r\n              .includes(filterValue)\r\n        )\r\n      )\r\n    : calculatedResults;\r\n\r\n  return { filteredResults };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Slow);\r\n","import React from \"react\";\r\nimport BugTable from \"./BugTable\";\r\nimport { connect } from \"react-redux\";\r\nimport { createSelector, createStructuredSelector } from \"reselect\";\r\n\r\nclass Fast extends React.Component {\r\n  render() {\r\n    return <BugTable results={this.props.filteredResults} />;\r\n  }\r\n}\r\n\r\nconst getFilterValue = state => state.filterValue;\r\nconst getResults = state => state.results;\r\n\r\nconst getCalculatedResults = createSelector(\r\n  [getResults],\r\n  results => {\r\n    const CountByUsers = new Map();\r\n\r\n    for (let result of results) {\r\n      CountByUsers.set(\r\n        result.user.id,\r\n        (CountByUsers.get(result.user.id) || 0) + 1\r\n      );\r\n    }\r\n\r\n    const calculatedResults = results.map(it => {\r\n      let count = 0;\r\n      for (let result of results) {\r\n        if (result.id === it.id) continue;\r\n        if (\r\n          result.body.includes(\"#\" + it.number) ||\r\n          result.title.includes(\"#\" + it.number)\r\n        )\r\n          count++;\r\n      }\r\n      return {\r\n        ...it,\r\n        refCount: count,\r\n        user: { ...it.user, issuesCount: CountByUsers.get(it.user.id) }\r\n      };\r\n    });\r\n    return calculatedResults;\r\n  }\r\n);\r\n\r\nconst getFilterValues = createSelector([getFilterValue], filterValue => {\r\n  const filterValues = filterValue\r\n    .split(\" \")\r\n    .map(it => it.trim().toLowerCase())\r\n    .filter(Boolean);\r\n  return filterValues;\r\n});\r\n\r\nconst getFilteredResults = createSelector(\r\n  [getCalculatedResults, getFilterValues],\r\n  (calculatedResults, filterValues) => {\r\n    const filteredResults = filterValues.length\r\n      ? calculatedResults.filter(it =>\r\n          filterValues.every(\r\n            filterValue =>\r\n              it.title.toLowerCase().includes(filterValue) ||\r\n              it.body.toLowerCase().includes(filterValue) ||\r\n              it.number.toString().includes(filterValue) ||\r\n              it.refCount.toString().includes(filterValue) ||\r\n              (it.user.login + \" (\" + it.user.issuesCount + \")\")\r\n                .toLowerCase()\r\n                .includes(filterValue) ||\r\n              it.state.toLowerCase().includes(filterValue) ||\r\n              new Date(it.created_at)\r\n                .toLocaleDateString(\"en-us\", {\r\n                  year: \"numeric\",\r\n                  month: \"numeric\",\r\n                  day: \"numeric\"\r\n                })\r\n                .includes(filterValue)\r\n          )\r\n        )\r\n      : calculatedResults;\r\n\r\n    return filteredResults;\r\n  }\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  filteredResults: getFilteredResults\r\n});\r\n\r\nexport default connect(mapStateToProps)(Fast);\r\n","import React from \"react\";\r\nimport BugTable from \"./BugTable\";\r\nimport { connect } from \"react-redux\";\r\nimport { createSelector, createStructuredSelector } from \"reselect\";\r\n\r\nclass Broken extends React.Component {\r\n  render() {\r\n    return <BugTable results={this.props.filteredResults} />;\r\n  }\r\n}\r\n\r\nconst getFilterValue = state => state.filterValue;\r\nconst getResults = state => state.results;\r\n\r\nconst getCalculatedResults = createSelector(\r\n  [getResults, state=>state],\r\n  results => {\r\n    const CountByUsers = new Map();\r\n\r\n    for (let result of results) {\r\n      CountByUsers.set(\r\n        result.user.id,\r\n        (CountByUsers.get(result.user.id) || 0) + 1\r\n      );\r\n    }\r\n\r\n    const calculatedResults = results.map(it => {\r\n      let count = 0;\r\n      for (let result of results) {\r\n        if (result.id === it.id) continue;\r\n        if (\r\n          result.body.includes(\"#\" + it.number) ||\r\n          result.title.includes(\"#\" + it.number)\r\n        )\r\n          count++;\r\n      }\r\n      return {\r\n        ...it,\r\n        refCount: count,\r\n        user: { ...it.user, issuesCount: CountByUsers.get(it.user.id) }\r\n      };\r\n    });\r\n    return calculatedResults;\r\n  }\r\n);\r\n\r\nconst getFilterValues = createSelector([getFilterValue], filterValue => {\r\n  const filterValues = filterValue\r\n    .split(\" \")\r\n    .map(it => it.trim().toLowerCase())\r\n    .filter(Boolean);\r\n  return filterValues;\r\n});\r\n\r\nconst getFilteredResults = createSelector(\r\n  [getCalculatedResults, getFilterValues],\r\n  (calculatedResults, filterValues) => {\r\n    const filteredResults = filterValues.length\r\n      ? calculatedResults.filter(it =>\r\n          filterValues.every(\r\n            filterValue =>\r\n              it.title.toLowerCase().includes(filterValue) ||\r\n              it.body.toLowerCase().includes(filterValue) ||\r\n              it.number.toString().includes(filterValue) ||\r\n              it.refCount.toString().includes(filterValue) ||\r\n              (it.user.login + \" (\" + it.user.issuesCount + \")\")\r\n                .toLowerCase()\r\n                .includes(filterValue) ||\r\n              it.state.toLowerCase().includes(filterValue) ||\r\n              new Date(it.created_at)\r\n                .toLocaleDateString(\"en-us\", {\r\n                  year: \"numeric\",\r\n                  month: \"numeric\",\r\n                  day: \"numeric\"\r\n                })\r\n                .includes(filterValue)\r\n          )\r\n        )\r\n      : calculatedResults;\r\n\r\n    return filteredResults;\r\n  }\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  filteredResults: getFilteredResults\r\n});\r\n\r\nexport default connect(mapStateToProps)(Broken);\r\n","import React from \"react\";\r\n\r\nclass SchemeInput extends React.Component {\r\n  render() {\r\n    return (\r\n      <span>\r\n        <input className=\"input-radio\"\r\n          type=\"radio\"\r\n          value={this.props.value}\r\n          id={this.props.value}\r\n          name=\"color-scheme\"\r\n          checked={this.props.checked}\r\n          onChange={this.props.onChange}\r\n        ></input>\r\n        <label className=\"scheme-input\" htmlFor={this.props.value}>{this.props.displayName}</label>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SchemeInput;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateColorScheme } from \"../actions/SchemeChangerActions\";\r\nimport SchemeInput from \"./SchemeInput\";\r\n\r\nclass SchemeChanger extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      activeScheme: props.activeColorScheme\r\n    };\r\n  }\r\n\r\n  onChangeColorScheme = e => {\r\n    this.setState({ activeScheme: e.target.value }, \r\n      () =>this.props.updateColorScheme(this.state.activeScheme)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <span>\r\n        <SchemeInput\r\n          checked={this.state.activeScheme === \"green\"}\r\n          value=\"green\"\r\n          displayName=\"Green\"\r\n          onChange={this.onChangeColorScheme}\r\n        />\r\n        <SchemeInput\r\n          checked={this.state.activeScheme === \"red\"}\r\n          value=\"red\"\r\n          displayName=\"Red\"\r\n          onChange={this.onChangeColorScheme}\r\n        />\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  activeColorScheme: state.activeColorScheme\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateColorScheme\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SchemeChanger);\r\n","export const UPDATE_COLOR_SCHEME = \"CHANGE_SCHEME\";\r\n\r\nexport const updateColorScheme= payload => ({\r\n  type: UPDATE_COLOR_SCHEME,\r\n  payload\r\n});","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass ComponentMenuItem extends React.Component {\r\n  render() {\r\n    return (\r\n      <span\r\n        onClick={this.props.onClick}\r\n        id={this.props.id}\r\n        className={this.props.className}\r\n      >\r\n        {this.props.displayName} <FontAwesomeIcon icon={this.props.icon} />\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ComponentMenuItem;\r\n","import React from \"react\";\r\nimport Filter from \"./Filter\";\r\nimport Slow from \"./Slow\";\r\nimport Fast from \"./Fast\";\r\nimport Broken from \"./Broken\";\r\nimport SchemeChanger from \"./SchemeChanger\";\r\nimport ComponentMenuItem from \"./ComponentMenuItem\";\r\nimport {\r\n  faPlaneDeparture,\r\n  faCarCrash,\r\n  faShoePrints\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass PageView extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      selectedComponentId: props.initialSelectedComponentId || \"fast\"\r\n    };\r\n  }\r\n\r\n  makeComponentActive = id => () => {\r\n    this.setState({ selectedComponentId: id });\r\n  };\r\n\r\n  renderSelectedComponent = () => {\r\n    switch (this.state.selectedComponentId) {\r\n      case \"slow\":\r\n        return <Slow />;\r\n      case \"fast\":\r\n        return <Fast />;\r\n      case \"broken\":\r\n        return <Broken />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  getClassName = id => {\r\n    const colorClassName =\r\n      this.state.selectedComponentId === id\r\n        ? \"active \" + (this.props.activeColorScheme + \"-color\")\r\n        : \"inactive \";\r\n    return \"component-box \" + colorClassName;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"filter-box\">\r\n          <Filter />\r\n          <SchemeChanger />\r\n        </div>\r\n        <div className=\"component-line\">\r\n          <span>\r\n            <ComponentMenuItem\r\n              onClick={this.makeComponentActive(\"slow\")}\r\n              id=\"slow\"\r\n              icon={faShoePrints}\r\n              displayName=\"Slow\"\r\n              className={this.getClassName(\"slow\")}\r\n            />\r\n            <ComponentMenuItem\r\n              onClick={this.makeComponentActive(\"fast\")}\r\n              id=\"fast\"\r\n              icon={faPlaneDeparture}\r\n              displayName=\"Fast\"\r\n              className={this.getClassName(\"fast\")}\r\n            />\r\n            <ComponentMenuItem\r\n              onClick={this.makeComponentActive(\"broken\")}\r\n              id=\"broken\"\r\n              icon={faCarCrash}\r\n              displayName=\"Broken\"\r\n              className={this.getClassName(\"broken\")}\r\n            />\r\n          </span>\r\n        </div>\r\n        {this.renderSelectedComponent()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  activeColorScheme: state.activeColorScheme\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(PageView);\r\n","import React from \"react\";\r\nimport PageView from \"./components/PageView\";\r\n\r\nfunction App() {\r\n  return <PageView />;\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import localResults from \"./api/sampleIssues.json\";\r\n\r\nimport { UPDATE_FILTER } from \"./actions/FilterActions\";\r\nimport { UPDATE_COLOR_SCHEME } from \"./actions/SchemeChangerActions\";\r\n\r\nconst initialState = {\r\n  filterValue: \"\",\r\n  results: localResults,\r\n  activeColorScheme: \"green\"\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action?.type) {\r\n    case UPDATE_FILTER:\r\n      return { ...state, filterValue: action.payload };\r\n    case UPDATE_COLOR_SCHEME:\r\n      return { ...state, activeColorScheme: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}